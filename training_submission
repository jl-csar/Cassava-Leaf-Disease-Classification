{"metadata":{"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":13836,"databundleVersionId":1718836,"sourceType":"competition"},{"sourceId":25624,"sourceType":"modelInstanceVersion","modelInstanceId":21582}],"dockerImageVersionId":30674,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":23.453128,"end_time":"2024-04-07T07:21:15.371280","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-04-07T07:20:51.918152","version":"2.5.0"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Packages","metadata":{"papermill":{"duration":0.003538,"end_time":"2024-04-07T07:20:55.198095","exception":false,"start_time":"2024-04-07T07:20:55.194557","status":"completed"},"tags":[]}},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras import models, layers\nimport pandas as pd\nimport numpy as np\nimport os\nimport io\nimport PIL\nimport csv\nimport shutil\nfrom PIL import Image\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras import mixed_precision","metadata":{"papermill":{"duration":15.197274,"end_time":"2024-04-07T07:21:10.398398","exception":false,"start_time":"2024-04-07T07:20:55.201124","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-08T00:45:29.648513Z","iopub.execute_input":"2024-04-08T00:45:29.649089Z","iopub.status.idle":"2024-04-08T00:45:44.321248Z","shell.execute_reply.started":"2024-04-08T00:45:29.649056Z","shell.execute_reply":"2024-04-08T00:45:44.320305Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"AUTOTUNE = tf.data.experimental.AUTOTUNE\nBATCH_SIZE = 64\nCLASSES = ['0', '1', '2', '3', '4']\nEPOCHS = 25","metadata":{"papermill":{"duration":0.013123,"end_time":"2024-04-07T07:21:10.414600","exception":false,"start_time":"2024-04-07T07:21:10.401477","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-08T00:45:44.322841Z","iopub.execute_input":"2024-04-08T00:45:44.323369Z","iopub.status.idle":"2024-04-08T00:45:44.328436Z","shell.execute_reply.started":"2024-04-08T00:45:44.323340Z","shell.execute_reply":"2024-04-08T00:45:44.327442Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Test Dataset","metadata":{"papermill":{"duration":0.00261,"end_time":"2024-04-07T07:21:10.420190","exception":false,"start_time":"2024-04-07T07:21:10.417580","status":"completed"},"tags":[]}},{"cell_type":"code","source":"paths = os.listdir(\"/kaggle/input/cassava-leaf-disease-classification/test_images\")\n\n# Create a dataset of file paths\ntest_dataset_paths = tf.data.Dataset.from_tensor_slices(paths)\n\n# Function to load and preprocess each image\ndef load_and_preprocess(path):\n    image = tf.io.read_file(\"/kaggle/input/cassava-leaf-disease-classification/test_images/\" + path)\n    image = tf.image.decode_jpeg(image, channels=3)\n    image = tf.image.resize(image, [512, 512])\n    return image\n\ntest_dataset = test_dataset_paths.map(load_and_preprocess).batch(batch_size = BATCH_SIZE).map(lambda x: (x/255)).prefetch(buffer_size=AUTOTUNE)","metadata":{"papermill":{"duration":0.156057,"end_time":"2024-04-07T07:21:10.579398","exception":false,"start_time":"2024-04-07T07:21:10.423341","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-08T01:24:18.134625Z","iopub.execute_input":"2024-04-08T01:24:18.135344Z","iopub.status.idle":"2024-04-08T01:24:18.208145Z","shell.execute_reply.started":"2024-04-08T01:24:18.135310Z","shell.execute_reply":"2024-04-08T01:24:18.207394Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Model","metadata":{"papermill":{"duration":0.002788,"end_time":"2024-04-07T07:21:10.585850","exception":false,"start_time":"2024-04-07T07:21:10.583062","status":"completed"},"tags":[]}},{"cell_type":"code","source":"# Define source and destination paths\nsrc_path = r\"/kaggle/input/trained_model1.keras/keras/eight/1/trained_model8_200_epochs_entire.keras\"\ndst_path = r\"/kaggle/working/\"\n\n# Copy the file\nshutil.copy(src_path, dst_path)\n\n    \nmodel = tf.keras.models.load_model('/kaggle/working/trained_model8_200_epochs_entire.keras')\n    \nmodel.compile(optimizer=\"adam\", loss = tf.keras.losses.SparseCategoricalCrossentropy(), metrics=[\"accuracy\"])","metadata":{"papermill":{"duration":0.812403,"end_time":"2024-04-07T07:21:11.401195","exception":false,"start_time":"2024-04-07T07:21:10.588792","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-08T00:45:45.626297Z","iopub.execute_input":"2024-04-08T00:45:45.626603Z","iopub.status.idle":"2024-04-08T00:45:46.300832Z","shell.execute_reply.started":"2024-04-08T00:45:45.626577Z","shell.execute_reply":"2024-04-08T00:45:46.299786Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Prediction and Submission","metadata":{"papermill":{"duration":0.002961,"end_time":"2024-04-07T07:21:11.407398","exception":false,"start_time":"2024-04-07T07:21:11.404437","status":"completed"},"tags":[]}},{"cell_type":"code","source":"probabilities = model.predict(test_dataset)\npredictions = np.argmax(probabilities, axis=-1)\n\ntest_ids = [str(path, encoding=\"utf-8\") for path in test_dataset_paths.as_numpy_iterator()]\n\nwith open('submission.csv', 'w', newline='') as csvfile:\n    writer = csv.writer(csvfile, delimiter=',')\n    writer.writerow(['image_id', 'label'])\n    for idx, prediction in zip(test_ids, predictions):\n        writer.writerow([idx, prediction])\n\n!head submission.csv","metadata":{"papermill":{"duration":1.533738,"end_time":"2024-04-07T07:21:12.944541","exception":false,"start_time":"2024-04-07T07:21:11.410803","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-08T01:24:21.083539Z","iopub.execute_input":"2024-04-08T01:24:21.084154Z","iopub.status.idle":"2024-04-08T01:24:22.102799Z","shell.execute_reply.started":"2024-04-08T01:24:21.084124Z","shell.execute_reply":"2024-04-08T01:24:22.101769Z"},"trusted":true},"execution_count":null,"outputs":[]}]}